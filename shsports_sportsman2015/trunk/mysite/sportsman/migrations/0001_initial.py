# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='名称')),
            ],
            options={
                'verbose_name': '区县',
                'verbose_name_plural': '区县',
            },
        ),
        migrations.CreateModel(
            name='Factor',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('version', models.CharField(max_length=100, verbose_name='版本')),
                ('month_age', models.IntegerField(verbose_name='月龄')),
                ('gender', models.CharField(max_length=10, verbose_name='性别', choices=[('MALE', '男'), ('FEMALE', '女')])),
                ('mean_20m', models.DecimalField(max_digits=10, verbose_name='20米跑平均值', decimal_places=2)),
                ('standard_deviation_20m', models.DecimalField(max_digits=10, verbose_name='20米跑标准偏差', decimal_places=4)),
                ('mean_bal', models.DecimalField(max_digits=10, verbose_name='后退平衡平均值', decimal_places=2)),
                ('standard_deviation_bal', models.DecimalField(max_digits=10, verbose_name='后退平衡标准偏差', decimal_places=4)),
                ('mean_shh', models.DecimalField(max_digits=10, verbose_name='侧向跳平均值', decimal_places=2)),
                ('standard_deviation_shh', models.DecimalField(max_digits=10, verbose_name='侧向跳标准偏差', decimal_places=4)),
                ('mean_rb', models.DecimalField(max_digits=10, verbose_name='立位体前屈平均值', decimal_places=2)),
                ('standard_deviation_rb', models.DecimalField(max_digits=10, verbose_name='立位体前屈标准偏差', decimal_places=4)),
                ('mean_ls', models.DecimalField(max_digits=10, verbose_name='俯卧撑平均值', decimal_places=2)),
                ('standard_deviation_ls', models.DecimalField(max_digits=10, verbose_name='俯卧撑标准偏差', decimal_places=4)),
                ('mean_su', models.DecimalField(max_digits=10, verbose_name='仰卧起坐平均值', decimal_places=2)),
                ('standard_deviation_su', models.DecimalField(max_digits=10, verbose_name='仰卧起坐标准偏差', decimal_places=4)),
                ('mean_sws', models.DecimalField(max_digits=10, verbose_name='立定跳远平均值', decimal_places=2)),
                ('standard_deviation_sws', models.DecimalField(max_digits=10, verbose_name='立定跳远标准偏差', decimal_places=4)),
                ('mean_ball', models.DecimalField(max_digits=10, verbose_name='投掷球平均值', decimal_places=2)),
                ('standard_deviation_ball', models.DecimalField(max_digits=10, verbose_name='投掷球标准偏差', decimal_places=4)),
                ('mean_lauf', models.DecimalField(max_digits=10, verbose_name='6分钟跑平均值', decimal_places=2)),
                ('standard_deviation_lauf', models.DecimalField(max_digits=10, verbose_name='6分钟跑标准偏差', decimal_places=4)),
            ],
            options={
                'verbose_name': '分布因素',
                'verbose_name_plural': '分布因素',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='名称')),
                ('universalName', models.CharField(max_length=100, verbose_name='名称（英文）')),
                ('district', models.ForeignKey(blank=True, verbose_name='所属区县', to='sportsman.District', null=True)),
            ],
            options={
                'verbose_name': '学校',
                'verbose_name_plural': '学校',
            },
        ),
        migrations.CreateModel(
            name='SchoolClass',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='名称')),
                ('universalName', models.CharField(max_length=100, verbose_name='名称（英文）')),
                ('school', models.ForeignKey(verbose_name='学校', to='sportsman.School')),
            ],
            options={
                'verbose_name': '班级',
                'verbose_name_plural': '班级',
            },
        ),
        migrations.CreateModel(
            name='SequenceNumber',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('code', models.CharField(max_length=100, verbose_name='代码', unique=True)),
                ('value', models.BigIntegerField(verbose_name='值（当前）')),
                ('prefix', models.CharField(max_length=100, blank=True, verbose_name='前缀', null=True)),
                ('suffix', models.CharField(max_length=100, blank=True, verbose_name='后缀', null=True)),
            ],
            options={
                'verbose_name': '序列编号',
                'verbose_name_plural': '序列编号',
            },
        ),
        migrations.CreateModel(
            name='StandardParameter',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('version', models.CharField(max_length=100, verbose_name='版本')),
                ('gender', models.CharField(max_length=10, verbose_name='性别', choices=[('MALE', '男'), ('FEMALE', '女')])),
                ('age', models.IntegerField(verbose_name='年龄')),
                ('percentile', models.DecimalField(max_digits=3, verbose_name='百分位', decimal_places=1)),
                ('e_20m', models.DecimalField(max_digits=3, verbose_name='20米跑', decimal_places=2)),
                ('e_bal', models.IntegerField(verbose_name='后退平衡')),
                ('e_shh', models.IntegerField(verbose_name='侧向跳')),
                ('e_rb', models.DecimalField(max_digits=3, verbose_name='立位体前屈', decimal_places=1)),
                ('e_ls', models.IntegerField(verbose_name='俯卧撑')),
                ('e_su', models.IntegerField(verbose_name='仰卧起坐')),
                ('e_sws', models.DecimalField(max_digits=4, verbose_name='立定跳远', decimal_places=1)),
                ('e_ball', models.DecimalField(max_digits=3, verbose_name='投掷球', decimal_places=1)),
                ('e_lauf', models.IntegerField(verbose_name='6分钟跑')),
            ],
            options={
                'verbose_name': '标准值表',
                'verbose_name_plural': '标准值表',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('noOfStudentStatus', models.CharField(max_length=255, blank=True, verbose_name='学籍号', null=True)),
                ('firstName', models.CharField(max_length=255, verbose_name='名')),
                ('lastName', models.CharField(max_length=255, verbose_name='姓')),
                ('universalFirstName', models.CharField(max_length=255, blank=True, verbose_name='名（英文）', null=True)),
                ('universalLastName', models.CharField(max_length=255, blank=True, verbose_name='姓（英文）', null=True)),
                ('gender', models.CharField(max_length=255, blank=True, verbose_name='性别', choices=[('MALE', '男'), ('FEMALE', '女')], null=True)),
                ('dateOfBirth', models.DateField(blank=True, verbose_name='出生日期', null=True)),
                ('dateOfTesting', models.DateField(blank=True, verbose_name='测试日期', null=True)),
                ('number', models.IntegerField(blank=True, verbose_name='测试编号', null=True)),
                ('questionary', models.IntegerField(blank=True, verbose_name='问卷编号', null=True)),
                ('street', models.CharField(max_length=255, blank=True, verbose_name='路（地址）', null=True)),
                ('housenumber', models.CharField(max_length=255, blank=True, verbose_name='弄（地址）', null=True)),
                ('addition', models.CharField(max_length=255, blank=True, verbose_name='号（地址）', null=True)),
                ('zip', models.CharField(max_length=255, blank=True, verbose_name='邮政编码（地址）', null=True)),
                ('city', models.CharField(max_length=255, blank=True, verbose_name='城市（地址）', null=True)),
                ('addressClearance', models.BooleanField(verbose_name='地址Clearance', default=False)),
                ('weight', models.DecimalField(blank=True, verbose_name='体重（公斤）', decimal_places=2, max_digits=5, null=True)),
                ('height', models.PositiveSmallIntegerField(blank=True, verbose_name='身高（厘米）', null=True)),
                ('e_bal30_1', models.PositiveSmallIntegerField(blank=True, verbose_name='测试成绩 平衡 3.0厘米 第一次（步）', null=True)),
                ('e_bal30_2', models.PositiveSmallIntegerField(blank=True, verbose_name='测试成绩 平衡 3.0厘米 第二次（步）', null=True)),
                ('e_bal45_1', models.PositiveSmallIntegerField(blank=True, verbose_name='测试成绩 平衡 4.5厘米 第一次（步）', null=True)),
                ('e_bal45_2', models.PositiveSmallIntegerField(blank=True, verbose_name='测试成绩 平衡 4.5厘米 第二次（步）', null=True)),
                ('e_bal60_1', models.PositiveSmallIntegerField(blank=True, verbose_name='测试成绩 平衡 6.0厘米 第一次（步）', null=True)),
                ('e_bal60_2', models.PositiveSmallIntegerField(blank=True, verbose_name='测试成绩 平衡 6.0厘米 第二次（步）', null=True)),
                ('e_shh_1f', models.PositiveSmallIntegerField(blank=True, verbose_name='测试成绩 侧向跳 第一次跳（错误次数）', null=True)),
                ('e_shh_1s', models.PositiveSmallIntegerField(blank=True, verbose_name='测试成绩 侧向跳 第一次跳（总次数）', null=True)),
                ('e_shh_2f', models.PositiveSmallIntegerField(blank=True, verbose_name='测试成绩 侧向跳 第二次跳（错误次数）', null=True)),
                ('e_shh_2s', models.PositiveSmallIntegerField(blank=True, verbose_name='测试成绩 侧向跳 第二次跳（总次数）', null=True)),
                ('e_sws_1', models.DecimalField(blank=True, verbose_name='测试成绩 跳远 第一次（厘米）', decimal_places=2, max_digits=5, null=True)),
                ('e_sws_2', models.DecimalField(blank=True, verbose_name='测试成绩 跳远 第二次（厘米）', decimal_places=2, max_digits=5, null=True)),
                ('e_20m_1', models.DecimalField(blank=True, verbose_name='测试成绩 20米冲刺跑 第一次（秒）', decimal_places=2, max_digits=4, null=True)),
                ('e_20m_2', models.DecimalField(blank=True, verbose_name='测试成绩 20米冲刺跑 第二次（秒）', decimal_places=2, max_digits=4, null=True)),
                ('e_su', models.IntegerField(blank=True, verbose_name='测试成绩 仰卧起坐（重复次数）', null=True)),
                ('e_ls', models.IntegerField(blank=True, verbose_name='测试成绩 俯卧撑（重复次数）', null=True)),
                ('e_rb_1', models.DecimalField(blank=True, verbose_name='测试成绩 直身前屈 第一次（厘米）', decimal_places=2, max_digits=5, null=True)),
                ('e_rb_2', models.DecimalField(blank=True, verbose_name='测试成绩 直身前屈 第二次（厘米）', decimal_places=2, max_digits=5, null=True)),
                ('e_lauf_runden', models.PositiveSmallIntegerField(blank=True, verbose_name='测试成绩 六分跑 已完成圈数', null=True)),
                ('e_lauf_rest', models.PositiveSmallIntegerField(blank=True, verbose_name='测试成绩 六分跑 最后未完成的一圈所跑距离（米）', null=True)),
                ('e_ball_1', models.DecimalField(blank=True, verbose_name='测试成绩 投掷 第一次（米）', decimal_places=2, max_digits=5, null=True)),
                ('e_ball_2', models.DecimalField(blank=True, verbose_name='测试成绩 投掷 第二次（米）', decimal_places=2, max_digits=5, null=True)),
                ('e_ball_3', models.DecimalField(blank=True, verbose_name='测试成绩 投掷 第三次（米）', decimal_places=2, max_digits=5, null=True)),
                ('e_slauf_10', models.DecimalField(blank=True, verbose_name='星形跑重复10次', decimal_places=2, max_digits=19, null=True)),
                ('last_name', models.CharField(max_length=5, blank=True, verbose_name='姓', null=True)),
                ('first_name', models.CharField(max_length=10, blank=True, verbose_name='名', null=True)),
                ('birth_date', models.DateField(blank=True, verbose_name='出生日期', null=True)),
                ('school_name', models.CharField(max_length=100, blank=True, verbose_name='学校名称', null=True)),
                ('class_name', models.CharField(max_length=100, blank=True, verbose_name='班级名称', null=True)),
                ('external_id', models.CharField(max_length=10, blank=True, verbose_name='外部标识', null=True)),
                ('schoolClass', models.ForeignKey(verbose_name='班级', to='sportsman.SchoolClass')),
            ],
            options={
                'permissions': (('import_student', '可以导入学生'), ('export_student', '可以导出学生'), ('evaluate_student', '可以评价学生')),
                'verbose_name': '学生',
                'verbose_name_plural': '学生',
            },
        ),
        migrations.CreateModel(
            name='StudentEvaluation',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('p_bal', models.PositiveSmallIntegerField(blank=True, verbose_name='百分等级 平衡', null=True)),
                ('p_shh', models.PositiveSmallIntegerField(blank=True, verbose_name='百分等级 侧向跳', null=True)),
                ('p_sws', models.PositiveSmallIntegerField(blank=True, verbose_name='百分等级 跳远', null=True)),
                ('p_20m', models.PositiveSmallIntegerField(blank=True, verbose_name='百分等级 20米冲刺跑', null=True)),
                ('p_su', models.PositiveSmallIntegerField(blank=True, verbose_name='百分等级 仰卧起坐', null=True)),
                ('p_ls', models.PositiveSmallIntegerField(blank=True, verbose_name='百分等级 俯卧撑', null=True)),
                ('p_rb', models.PositiveSmallIntegerField(blank=True, verbose_name='百分等级 直身前屈', null=True)),
                ('p_lauf', models.PositiveSmallIntegerField(blank=True, verbose_name='百分等级 六分跑', null=True)),
                ('p_ball', models.PositiveSmallIntegerField(blank=True, verbose_name='百分等级 投掷', null=True)),
                ('p_height', models.PositiveSmallIntegerField(blank=True, verbose_name='百分等级 身高', null=True)),
                ('p_weight', models.PositiveSmallIntegerField(blank=True, verbose_name='百分等级 体重', null=True)),
                ('p_bmi', models.PositiveSmallIntegerField(blank=True, verbose_name='百分等级 BMI', null=True)),
                ('potential_badminton', models.DecimalField(blank=True, verbose_name='运动潜质 羽毛球', decimal_places=6, max_digits=7, null=True)),
                ('potential_basketball', models.DecimalField(blank=True, verbose_name='运动潜质 篮球', decimal_places=6, max_digits=7, null=True)),
                ('potential_soccer', models.DecimalField(blank=True, verbose_name='运动潜质 足球', decimal_places=6, max_digits=7, null=True)),
                ('potential_gymnastics', models.DecimalField(blank=True, verbose_name='运动潜质 体操', decimal_places=6, max_digits=7, null=True)),
                ('potential_canoe', models.DecimalField(blank=True, verbose_name='运动潜质 皮艇/划艇', decimal_places=6, max_digits=7, null=True)),
                ('potential_discus', models.DecimalField(blank=True, verbose_name='运动潜质 铁饼', decimal_places=6, max_digits=7, null=True)),
                ('potential_shot_put', models.DecimalField(blank=True, verbose_name='运动潜质 铅球', decimal_places=6, max_digits=7, null=True)),
                ('potential_pole_vault', models.DecimalField(blank=True, verbose_name='运动潜质 撑杆跳', decimal_places=6, max_digits=7, null=True)),
                ('potential_high_jump', models.DecimalField(blank=True, verbose_name='运动潜质 跳高', decimal_places=6, max_digits=7, null=True)),
                ('potential_javelin', models.DecimalField(blank=True, verbose_name='运动潜质 标枪', decimal_places=6, max_digits=7, null=True)),
                ('potential_long_jump', models.DecimalField(blank=True, verbose_name='运动潜质 跳远', decimal_places=6, max_digits=7, null=True)),
                ('potential_huerdles', models.DecimalField(blank=True, verbose_name='运动潜质 跨栏', decimal_places=6, max_digits=7, null=True)),
                ('potential_sprint', models.DecimalField(blank=True, verbose_name='运动潜质 短跑', decimal_places=6, max_digits=7, null=True)),
                ('potential_rowing', models.DecimalField(blank=True, verbose_name='运动潜质 赛艇', decimal_places=6, max_digits=7, null=True)),
                ('potential_swimming', models.DecimalField(blank=True, verbose_name='运动潜质 游泳', decimal_places=6, max_digits=7, null=True)),
                ('potential_tennis', models.DecimalField(blank=True, verbose_name='运动潜质 网球', decimal_places=6, max_digits=7, null=True)),
                ('potential_table_tennis', models.DecimalField(blank=True, verbose_name='运动潜质 乒乓球', decimal_places=6, max_digits=7, null=True)),
                ('potential_volleyball', models.DecimalField(blank=True, verbose_name='运动潜质 排球', decimal_places=6, max_digits=7, null=True)),
                ('potential_athletics_running', models.DecimalField(blank=True, verbose_name='运动潜质 耐力跑', decimal_places=6, max_digits=7, null=True)),
                ('potential_athletics_sprinting_jumping_throwing', models.DecimalField(blank=True, verbose_name='运动潜质 跑跳投', decimal_places=6, max_digits=7, null=True)),
                ('is_talent', models.BooleanField(verbose_name='运动天赋优秀', default=False)),
                ('is_frail', models.BooleanField(verbose_name='需要健康干预', default=False)),
                ('overall_score', models.PositiveSmallIntegerField(blank=True, verbose_name='总分', null=True)),
                ('talent_rank_number', models.PositiveSmallIntegerField(blank=True, verbose_name='运动天赋优秀排名', null=True)),
                ('frail_rank_number', models.PositiveSmallIntegerField(blank=True, verbose_name='需要健康干预排名', null=True)),
                ('certificate_data', models.TextField(blank=True, verbose_name='证书数据', null=True)),
                ('certificate_file', models.FileField(blank=True, verbose_name='证书文件', upload_to='certificates/%Y/%m/%d/', null=True)),
                ('student', models.OneToOneField(to='sportsman.Student')),
            ],
            options={
                'verbose_name': '学生评价',
                'verbose_name_plural': '学生评价',
            },
        ),
        migrations.CreateModel(
            name='TestPlan',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('startDate', models.DateField(blank=True, verbose_name='开始日期', null=True)),
                ('endDate', models.DateField(blank=True, verbose_name='结束日期', null=True)),
                ('isPublished', models.BooleanField(verbose_name='已发布', default=False)),
            ],
            options={
                'verbose_name': '测试批次',
                'verbose_name_plural': '测试批次',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('district', models.ForeignKey(blank=True, verbose_name='所属区县', to='sportsman.District', null=True)),
                ('user', models.OneToOneField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '用户资料',
                'verbose_name_plural': '用户资料',
            },
        ),
        migrations.AddField(
            model_name='studentevaluation',
            name='testPlan',
            field=models.ForeignKey(blank=True, verbose_name='测试批次', to='sportsman.TestPlan', null=True),
        ),
        migrations.AddField(
            model_name='student',
            name='testPlan',
            field=models.ForeignKey(blank=True, verbose_name='测试批次', to='sportsman.TestPlan', null=True),
        ),
    ]
